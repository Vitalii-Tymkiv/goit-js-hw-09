{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAgB,CACpBC,SAAU,YACVC,aAAa,EACbC,cAAc,EACdC,aAAa,GAMf,IAAIC,EACAC,EACAC,EAkBJ,SAASC,EAAcP,EAAUQ,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEb,EAAUgB,aAAAR,IAEpBM,EAAO,C,SAAEd,EAAUgB,aAAAR,MAEpBA,MAhCSS,SAASC,cAAc,SAC/BC,iBAAiB,UAMzB,SAAyBC,GACvBA,EAAMC,iBACNC,QAAQC,IAAIH,EAAMI,eAElB,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBR,EAAMI,cAEVpB,EAAeyB,OAAOC,SAASJ,EAAMK,OACrC1B,EAAcwB,OAAOC,SAASH,EAAKI,OACnCzB,EAAgBuB,OAAOC,SAASF,EAAOG,OAmBzC,WACE,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,EAAe0B,GAAK,EACtCzB,EAAcyB,EAAI,EAAG5B,GAClB6B,MAAK,EAACjC,SAAEA,EAAUgB,aAAAkB,MACjBrC,EAAAsC,OAAOC,QACL,uBAAqBpC,QAAiBkC,MAAkBnC,MAI3DsC,OAAM,EAACrC,SAAEA,EAAUgB,aAAAsB,MAClBzC,EAAAsC,OAAOI,QACL,sBAAoBvC,QAAesC,MAAkBvC,MAI3DK,GAAgBC,EAhClBmC,GACApB,EAAMI,cAAciB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst notifyOptions = {\n  position: 'right-top',\n  backOverlay: true,\n  clickToClose: true,\n  closeButton: true,\n};\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onFormSubmitter);\n\nlet delayInteger;\nlet stepInteger;\nlet amountInteger;\n\nfunction onFormSubmitter(event) {\n  event.preventDefault();\n  console.log(event.currentTarget);\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  delayInteger = Number.parseInt(delay.value);\n  stepInteger = Number.parseInt(step.value);\n  amountInteger = Number.parseInt(amount.value);\n\n  filterPromises();\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delayInteger) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delayInteger });\n      } else {\n        reject({ position, delayInteger });\n      }\n    }, delayInteger);\n  });\n}\n\nfunction filterPromises() {\n  for (let i = 0; i < amountInteger; i += 1) {\n    createPromise(i + 1, delayInteger)\n      .then(({ position, delayInteger }) => {\n        Notify.success(\n          `✅ Fulfilled promise ${position} in ${delayInteger}ms`,\n          notifyOptions\n        );\n      })\n      .catch(({ position, delayInteger }) => {\n        Notify.failure(\n          `❌ Rejected promise ${position} in ${delayInteger}ms`,\n          notifyOptions\n        );\n      });\n    delayInteger += stepInteger;\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$notifyOptions","position","backOverlay","clickToClose","closeButton","$47d4ff9957288465$var$delayInteger","$47d4ff9957288465$var$stepInteger","$47d4ff9957288465$var$amountInteger","$47d4ff9957288465$var$createPromise","delayInteger1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delayInteger","document","querySelector","addEventListener","event","preventDefault","console","log","currentTarget","elements","delay","step","amount","Number","parseInt","value","i","then","delayInteger2","Notify","success","catch","delayInteger3","failure","$47d4ff9957288465$var$filterPromises","reset"],"version":3,"file":"03-promises.2ee869fd.js.map"}