{"mappings":"gfAAA,IAKIA,EACAC,EACAC,EAPJC,EAAAC,EAAA,SAEgBC,SAASC,cAAc,SAC/BC,iBAAiB,UAazB,SAAyBC,GACvBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAG3Bf,EAAegB,OAAOC,SAASJ,EAAMK,OACrCjB,EAAce,OAAOC,SAASH,EAAKI,OACnChB,EAAgBc,OAAOC,SAASF,EAAOG,OAmBzC,WACE,IAAK,IAAIC,EAAI,EAAGA,EAAIjB,EAAeiB,GAAK,EACtCC,EAAcD,EAAI,EAAGnB,GAClBqB,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAYF,EAAZG,aACjBtB,EAAAuB,OAAOC,QACL,uBAAwCC,OAAfL,EAAS,QAAmBK,OAAbJ,EAAa,MACnDK,MAGLC,OAAM,SAAAR,G,IAAGC,EAAQD,EAARC,SAAUQ,EAAYT,EAAZG,aAClBtB,EAAAuB,OAAOM,QACL,sBAAqCJ,OAAfL,EAAS,QAAmBK,OAAbG,EAAa,MAClDF,MAGN7B,GAAgBC,EAhClBgC,GACAzB,EAAMG,cAAcuB,WAlBtB,IAAML,EAAgB,CACpBN,SAAU,YACVY,aAAa,EACbC,cAAc,EACdC,aAAa,GAiBf,SAASjB,EAAcG,EAAUe,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEpB,WAAUE,aAAAa,IAEpBM,EAAO,CAAErB,WAAUE,aAAAa,MAEpBA,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onFormSubmitter);\n\nlet delayInteger;\nlet stepInteger;\nlet amountInteger;\n\nconst notifyOptions = {\n  position: 'right-top',\n  backOverlay: true,\n  clickToClose: false,\n  closeButton: false,\n};\n\nfunction onFormSubmitter(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  delayInteger = Number.parseInt(delay.value);\n  stepInteger = Number.parseInt(step.value);\n  amountInteger = Number.parseInt(amount.value);\n\n  filterPromises();\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delayInteger) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delayInteger });\n      } else {\n        reject({ position, delayInteger });\n      }\n    }, delayInteger);\n  });\n}\n\nfunction filterPromises() {\n  for (let i = 0; i < amountInteger; i += 1) {\n    createPromise(i + 1, delayInteger)\n      .then(({ position, delayInteger }) => {\n        Notify.success(\n          `✅ Fulfilled promise ${position} in ${delayInteger}ms`,\n          notifyOptions\n        );\n      })\n      .catch(({ position, delayInteger }) => {\n        Notify.failure(\n          `❌ Rejected promise ${position} in ${delayInteger}ms`,\n          notifyOptions\n        );\n      });\n    delayInteger += stepInteger;\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$delayInteger","$ce04d3a99e08e73b$var$stepInteger","$ce04d3a99e08e73b$var$amountInteger","$h6c0i","parcelRequire","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay","step","amount","Number","parseInt","value","i","$ce04d3a99e08e73b$var$createPromise","then","param","position","delayInteger2","delayInteger","Notify","success","concat","$ce04d3a99e08e73b$var$notifyOptions","catch","delayInteger3","failure","$ce04d3a99e08e73b$var$filterPromises","reset","backOverlay","clickToClose","closeButton","delayInteger1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.8301c5f4.js.map"}